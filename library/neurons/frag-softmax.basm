%fragment softmax iomode:sync template:true resout:r9
%meta literal resin {{ with $last := adds "10" .Params.inputs }}{{range $y := intRange "10" $last }}{{printf "r%d:" $y}}{{end}}{{end}}
	mov	r8, 0f0.0
{{ with $last := adds "10" .Params.inputs }}
{{range $y := intRange "10" $last}}
{{printf "mov r1,r%d\n" $y}}
        mov     r0, 0f1.0
        mov     r2, 0f1.0
        mov     r3, 0f1.0
        mov     r4, 0f1.0
        mov     r5, 0f1.0
        mov     r7, {{$.Params.expprec}}
loop{{printf "%d" $y}}:
        multf   r2, r1
        multf   r3, r4
        addf    r4, r5
        mov     r6, r2
        divf    r6, r3

        addf    r0, r6

        dec     r7
        jz      r7,exit{{printf "%d" $y}}
        j       loop{{printf "%d" $y}}
exit{{printf "%d" $y}}:
{{$zs := adds "10" $.Params.pos}}
{{$z := atoi $zs}}
{{if eq $y $z}} 
	mov	r9, r0
{{end}}
	addf	r8, r0
{{end}}
{{end}}
	divf	r9, r8
%endfragment

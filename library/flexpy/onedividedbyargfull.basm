;fragtester
;sympy from sympy import *
;sympy x = Symbol('x', real=False)
;sympy symbols = [x]
;sympy testRanges = {'real: x': list(np.arange(-5,5,0.5)),
;sympy     'imag: x': list(np.arange(-5,5,0.5)),
;sympy     'real: y': list(np.arange(-5,5,2)),
;sympy     'imag: y': list(np.arange(-5,5,2)),
;sympy     }
;sympy with evaluate(False):
;sympy     spExpr = 1 / x
;
;
; one divided by a complex number passed as argument
; r0 is the real part of the divisor
; r1 is the imaginary part of the divisor
; Result: 1/(a+bi) = (a-bi)/(a²+b²) = a/(a²+b²) - bi/(a²+b²)
%fragment onedividedbyargfull template:true default_setop:rset resin:r0:r1 resout:r0:r1 default_prefix:0f
	; Save original values
	cpy	r2, r0 ; r2 = a
	cpy	r3, r1 ; r3 = b
	
	; Calculate a²
	cpy	r4, r0
	{{ .Params.multop }}	r4, r0 ; r4 = a²
	
	; Calculate b²
	cpy	r5, r1
	{{ .Params.multop }}	r5, r1 ; r5 = b²
	
	; Calculate denominator: a² + b²
	{{ .Params.addop }}	r4, r5 ; r4 = a² + b²
	
	; Calculate real part: a / (a² + b²)
	cpy	r0, r2 ; r0 = a
	{{ .Params.divop }}	r0, r4 ; r0 = a / (a² + b²)
	
	; Calculate imaginary part: -b / (a² + b²)
	cpy	r1, r3 ; r1 = b
	{{ .Params.setop }}	r6, {{ .Params.prefix }}-1.0
	{{ .Params.multop }}	r1, r6 ; r1 = -b
	{{ .Params.divop }}	r1, r4 ; r1 = -b / (a² + b²)
	
	nop	
%endfragment
